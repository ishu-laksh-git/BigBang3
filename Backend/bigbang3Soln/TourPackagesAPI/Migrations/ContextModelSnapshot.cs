// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourPackagesAPI.Models;

#nullable disable

namespace TourPackagesAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TourPackagesAPI.Models.gallery", b =>
                {
                    b.Property<int>("PicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PicId"), 1L, 1);

                    b.Property<string>("PicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.HasKey("PicId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("TourPackagesAPI.Models.itenary", b =>
                {
                    b.Property<int>("itenaryItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itenaryItemId"), 1L, 1);

                    b.Property<string>("activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.Property<int?>("packageId1")
                        .HasColumnType("int");

                    b.HasKey("itenaryItemId");

                    b.HasIndex("packageId1");

                    b.ToTable("Itenaries");
                });

            modelBuilder.Entity("TourPackagesAPI.Models.packages", b =>
                {
                    b.Property<int>("packageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("packageId"), 1L, 1);

                    b.Property<string>("AccommodationIncluded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("DepartureCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodIncluded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("No_Days")
                        .HasColumnType("int");

                    b.Property<int?>("No_Nights")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TourType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("available")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destination")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("packageId");

                    b.ToTable("Tourpackages");
                });

            modelBuilder.Entity("TourPackagesAPI.Models.itenary", b =>
                {
                    b.HasOne("TourPackagesAPI.Models.packages", "pack")
                        .WithMany("itenaries")
                        .HasForeignKey("packageId1");

                    b.Navigation("pack");
                });

            modelBuilder.Entity("TourPackagesAPI.Models.packages", b =>
                {
                    b.Navigation("itenaries");
                });
#pragma warning restore 612, 618
        }
    }
}
